@model project_demo.Models.DetailProduct

@{
    ViewData["Title"] = "WishDetails";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<h1>WishDetails</h1>

<div>

    <div class="row justify-content-between">
        <div class="col-auto">
            <h4>DetailProduct</h4>
        </div>
        <div class="col-auto">
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                    <!-- Three vertical dots (ellipsis) symbol -->
                    <span>&#8942;</span>
                </button>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <li><a class="dropdown-item" href="#" data-productid="@Model.ProductId" data-userid="@Model.UserId" onclick="saveToDatabase(this)">Report Ad</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div id="customAlert" class="alert alert-dismissible alert-warning" style="display: none;">
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <h4 id="alertHead" class="alert-heading"></h4>
        <p class="mb-0" id="alertMessage"></p>
    </div>

    
    <dl class="row">
        @* <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProductId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductId)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UserId)
        </dd> *@
        <dt class="col-sm-2">
            Name:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductName)
        </dd>
        <dt class="col-sm-2">
            Description:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductDescription)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price):
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Type):
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Type)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Availability):
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Availability)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostedDate):
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PostedDate)
        </dd>
       @*  <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd> *@
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryName):
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CategoryName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SubcategoryName):
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SubcategoryName)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>



<script>
    function saveToDatabase(item) {
        var productId = $(item).data("productid");
        var userId = $(item).data("userid");

        // Make an AJAX POST request to a controller action
        $.ajax({
            url: "@Url.Action("ReportAd", "User")",
            method: "POST",
            data: { productId: productId, userId: userId },
            success: function (result) {
                if (result.success) {
                    displayAlert("Ad Reported Successfully!", "alert-success");
                } else {
                    displayAlert("Failed to report", "alert-danger");
                }
            },
            error: function () {
                displayAlert("An error occurred while making the request.", "alert-danger");
            }
        });
    }

    function displayAlert(message, alertClass) {
        // Set the alert message
        $("#alertMessage").text(message);

        // Apply the Bootstrap alert class
        $("#customAlert").removeClass("alert-success alert-info alert-warning alert-danger");
        $("#customAlert").addClass(alertClass);

        // Show the custom alert
        $("#customAlert").show();

        setTimeout(function () {
            customAlert.hide();
        }, 3000); // Close after 3 seconds
    }
</script>